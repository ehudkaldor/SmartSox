akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    
  extensions = ["akka.cluster.pubsub.DistributedPubSub", "com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }

  log-dead-letters = 1
  log-dead-letters-during-shutdown = off
  
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }
    serializers.java = "com.romix.akka.serialization.kryo.KryoSerializer"

    kryo {
      type = "nograph"
      idstrategy = "default"
      serializer-pool-size = 1024
      kryo-reference-map = false
    }
  }
  
  remote {
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  cluster {
    auto-down-unreachable-after = 10s
  }
}


clustering {
  ip = localhost
  port = 2551
  port = ${?CLUSTER_PORT}
  cluster.name = application
}